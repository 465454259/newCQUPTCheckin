name: check_in

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 1 * * *'
  workflow_dispatch:

jobs:
  build:
    name: do_checkin
    runs-on: ubuntu-latest
    env: 
      USERNAME: ${{secrets.USERNAME}}
      PASSWORD: ${{secrets.PASSWORD}}
      JZDXXDZ: ${{secrets.JZDXXDZ}}
      LONGITUDE: ${{secrets.LONGITUDE}}
      LATITUDE: ${{secrets.LATITUDE}}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Export Env
        run: |
          if [ -n ${{secrets.NOTIFICATIONTYPES}} ];then   echo ${{secrets.NOTIFICATIONTYPES}} >> $GITHUB_ENV  fi
          if [ -n ${{secrets.PUSHPLUSTOKEN}}     ];then   echo ${{secrets.PUSHPLUSTOKEN}} >> $GITHUB_ENV fi
          if [ -n ${{secrets.PUSHPLUSTOPIC}}     ];then   echo ${{secrets.PUSHPLUSTOPIC}} >> $GITHUB_ENV fi
          if [ -n ${{secrets.PUSHPLUSTCHANNEL}}  ];then   echo ${{secrets.PUSHPLUSTCHANNEL}} >> $GITHUB_ENV fi
          if [ -n ${{secrets.TELEGRAMBOTTOKEN}}  ];then   echo ${{secrets.TELEGRAMBOTTOKEN}} >> $GITHUB_ENV fi
          if [ -n ${{secrets.TELEGRAMBOTCHATID}} ];then   echo ${{secrets.TELEGRAMBOTCHATID}} >> $GITHUB_ENV fi
          if [ -n ${{secrets.WXPUSHERTOKEN}}     ];then   echo ${{secrets.WXPUSHERTOKEN}} >> $GITHUB_ENV fi
          if [ -n ${{secrets.WXPUSHERUIDS}}      ];then   echo ${{secrets.WXPUSHERUIDS}} >> $GITHUB_ENV fi
          if [ -n ${{secrets.WXPUSHERTOPICIDS}}  ];then   echo ${{secrets.WXPUSHERTOPICIDS}} >> $GITHUB_ENV fi
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: run
        run: python3 cqupt_checkin.py 
